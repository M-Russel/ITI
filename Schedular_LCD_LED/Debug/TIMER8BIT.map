Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                              ./DIO_Prog.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./TIMER0.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./TIMER0.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Prog.o
LOAD ./TIMER0.o
LOAD ./TIMER0_prog.o
LOAD ./TIMER1.o
LOAD ./TIMER2.o
LOAD ./delay_ms.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x34ec
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.DIO_u8SetPinDirection
                0x0000000000000054       0x40 ./DIO_Prog.o
 .progmem.gcc_sw_table.DIO_u8SetPinValue
                0x0000000000000094       0x40 ./DIO_Prog.o
 .progmem.gcc_sw_table.DIO_u8GetPinValue
                0x00000000000000d4       0x40 ./DIO_Prog.o
 *(.progmem*)
 .progmem.data.var
                0x0000000000000114     0x2a3e ./TIMER1.o
                0x0000000000000114                var
                0x0000000000002b52                . = ALIGN (0x2)
                0x0000000000002b52                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000002b52        0x0 linker stubs
 *(.trampolines*)
                0x0000000000002b52                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000002b52                __ctors_start = .
 *(.ctors)
                0x0000000000002b52                __ctors_end = .
                0x0000000000002b52                __dtors_start = .
 *(.dtors)
                0x0000000000002b52                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000002b52        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000002b52                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000002b52        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000002b5e       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000002b5e                __do_copy_data
 .init4         0x0000000000002b74       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000002b74                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000002b84        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000000000002b8c        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000002b8c                __vector_1
                0x0000000000002b8c                __vector_12
                0x0000000000002b8c                __bad_interrupt
                0x0000000000002b8c                __vector_6
                0x0000000000002b8c                __vector_3
                0x0000000000002b8c                __vector_13
                0x0000000000002b8c                __vector_17
                0x0000000000002b8c                __vector_19
                0x0000000000002b8c                __vector_7
                0x0000000000002b8c                __vector_5
                0x0000000000002b8c                __vector_4
                0x0000000000002b8c                __vector_9
                0x0000000000002b8c                __vector_2
                0x0000000000002b8c                __vector_15
                0x0000000000002b8c                __vector_8
                0x0000000000002b8c                __vector_14
                0x0000000000002b8c                __vector_10
                0x0000000000002b8c                __vector_16
                0x0000000000002b8c                __vector_18
                0x0000000000002b8c                __vector_20
 .text          0x0000000000002b90        0x0 ./DIO_Prog.o
 .text          0x0000000000002b90        0x0 ./TIMER0.o
 .text          0x0000000000002b90        0x0 ./TIMER0_prog.o
 .text          0x0000000000002b90        0x0 ./TIMER1.o
 .text          0x0000000000002b90        0x0 ./TIMER2.o
 .text          0x0000000000002b90        0x0 ./delay_ms.o
 .text          0x0000000000002b90        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000002b90        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000002b90        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000002b90        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000002b90                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_voidInitialize
                0x0000000000002b90       0x54 ./DIO_Prog.o
                0x0000000000002b90                DIO_voidInitialize
 .text.DIO_u8SetPortDirection
                0x0000000000002be4       0x50 ./DIO_Prog.o
                0x0000000000002be4                DIO_u8SetPortDirection
 .text.DIO_u8SetPinDirection
                0x0000000000002c34      0x22e ./DIO_Prog.o
                0x0000000000002c34                DIO_u8SetPinDirection
 .text.DIO_u8SetPortValue
                0x0000000000002e62       0x2a ./DIO_Prog.o
                0x0000000000002e62                DIO_u8SetPortValue
 .text.DIO_u8SetPinValue
                0x0000000000002e8c      0x22e ./DIO_Prog.o
                0x0000000000002e8c                DIO_u8SetPinValue
 .text.DIO_u8GetPortValue
                0x00000000000030ba       0x20 ./DIO_Prog.o
                0x00000000000030ba                DIO_u8GetPortValue
 .text.DIO_u8GetPinValue
                0x00000000000030da      0x108 ./DIO_Prog.o
                0x00000000000030da                DIO_u8GetPinValue
 .text.func1    0x00000000000031e2       0x3a ./TIMER0.o
                0x00000000000031e2                func1
 .text.func2    0x000000000000321c       0x3a ./TIMER0.o
                0x000000000000321c                func2
 .text.func3    0x0000000000003256       0x3a ./TIMER0.o
                0x0000000000003256                func3
 .text.__vector_11
                0x0000000000003290       0x8a ./TIMER0.o
                0x0000000000003290                __vector_11
 .text.main     0x000000000000331a       0x12 ./TIMER0.o
                0x000000000000331a                main
 .text.schedular
                0x000000000000332c       0xb4 ./TIMER0.o
                0x000000000000332c                schedular
 .text.TIMER0_init
                0x00000000000033e0       0x4e ./TIMER0_prog.o
                0x00000000000033e0                TIMER0_init
 .text.main1    0x000000000000342e       0x12 ./TIMER1.o
                0x000000000000342e                main1
 .text.main2    0x0000000000003440       0x12 ./TIMER2.o
                0x0000000000003440                main2
 .text.delay_ms
                0x0000000000003452       0x8a ./delay_ms.o
                0x0000000000003452                delay_ms
 .text.libgcc.mul
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000000034dc        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc   0x00000000000034dc        0xc /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                0x00000000000034dc                __tablejump2__
                0x00000000000034e0                __tablejump__
 .text.libgcc.prologue
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000034e8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000034e8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000034e8                exit
                0x00000000000034e8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000034e8        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000034ec                _etext = .

.data           0x0000000000800060       0x12 load address 0x00000000000034ec
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./DIO_Prog.o
 .data          0x0000000000800060        0x0 ./TIMER0.o
 .data          0x0000000000800060        0x0 ./TIMER0_prog.o
 .data          0x0000000000800060        0x0 ./TIMER1.o
 .data          0x0000000000800060        0x0 ./TIMER2.o
 .data          0x0000000000800060        0x0 ./delay_ms.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.swTask   0x0000000000800060        0xc ./TIMER0.o
                0x0000000000800060                swTask
 .data.arr      0x000000000080006c        0x6 ./TIMER0.o
                0x000000000080006c                arr
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800072                . = ALIGN (0x2)
                0x0000000000800072                _edata = .
                0x0000000000800072                PROVIDE (__data_end, .)

.bss            0x0000000000800072        0x5
                0x0000000000800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800072        0x0 ./DIO_Prog.o
 .bss           0x0000000000800072        0x0 ./TIMER0.o
 .bss           0x0000000000800072        0x0 ./TIMER0_prog.o
 .bss           0x0000000000800072        0x0 ./TIMER1.o
 .bss           0x0000000000800072        0x0 ./TIMER2.o
 .bss           0x0000000000800072        0x0 ./delay_ms.o
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800072        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Green_Flag
                0x0000000000800072        0x1 ./TIMER0.o
                0x0000000000800072                Green_Flag
 .bss.red_Flag  0x0000000000800073        0x1 ./TIMER0.o
                0x0000000000800073                red_Flag
 .bss.blue_Flag
                0x0000000000800074        0x1 ./TIMER0.o
                0x0000000000800074                blue_Flag
 .bss.OVNB      0x0000000000800075        0x2 ./TIMER0.o
                0x0000000000800075                OVNB
 *(COMMON)
                0x0000000000800077                PROVIDE (__bss_end, .)
                0x00000000000034ec                __data_load_start = LOADADDR (.data)
                0x00000000000034fe                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800077        0x0
                0x0000000000800077                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800077                PROVIDE (__noinit_end, .)
                0x0000000000800077                _end = .
                0x0000000000800077                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2238
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x8e8 ./DIO_Prog.o
                                        0x8f4 (size before relaxing)
 .stab          0x0000000000000fb4      0x534 ./TIMER0.o
                                        0x60c (size before relaxing)
 .stab          0x00000000000014e8      0x2b8 ./TIMER0_prog.o
                                        0x390 (size before relaxing)
 .stab          0x00000000000017a0      0x4d4 ./TIMER1.o
                                        0x5ac (size before relaxing)
 .stab          0x0000000000001c74      0x2a0 ./TIMER2.o
                                        0x378 (size before relaxing)
 .stab          0x0000000000001f14      0x324 ./delay_ms.o
                                        0x3fc (size before relaxing)

.stabstr        0x0000000000000000     0x10d5
 *(.stabstr)
 .stabstr       0x0000000000000000     0x10d5 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DIO_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./TIMER0.o
 .comment       0x0000000000000000       0x12 ./TIMER0_prog.o
 .comment       0x0000000000000000       0x12 ./TIMER1.o
 .comment       0x0000000000000000       0x12 ./TIMER2.o
 .comment       0x0000000000000000       0x12 ./delay_ms.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(TIMER8BIT.elf elf32-avr)
LOAD linker stubs
