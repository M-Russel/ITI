Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./Green.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD ./Green.o
LOAD ./Initializing.o
LOAD ./Orange.o
LOAD ./Red.o
LOAD ./delay_ms.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3fc
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000076        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000007e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000007e                __vector_1
                0x000000000000007e                __vector_12
                0x000000000000007e                __bad_interrupt
                0x000000000000007e                __vector_6
                0x000000000000007e                __vector_3
                0x000000000000007e                __vector_11
                0x000000000000007e                __vector_13
                0x000000000000007e                __vector_17
                0x000000000000007e                __vector_19
                0x000000000000007e                __vector_7
                0x000000000000007e                __vector_5
                0x000000000000007e                __vector_4
                0x000000000000007e                __vector_9
                0x000000000000007e                __vector_2
                0x000000000000007e                __vector_15
                0x000000000000007e                __vector_8
                0x000000000000007e                __vector_14
                0x000000000000007e                __vector_10
                0x000000000000007e                __vector_16
                0x000000000000007e                __vector_18
                0x000000000000007e                __vector_20
 .text          0x0000000000000082        0x0 ./Green.o
 .text          0x0000000000000082        0x0 ./Initializing.o
 .text          0x0000000000000082        0x0 ./Orange.o
 .text          0x0000000000000082        0x0 ./Red.o
 .text          0x0000000000000082        0x0 ./delay_ms.o
 .text          0x0000000000000082        0x0 ./main.o
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000082                . = ALIGN (0x2)
 *(.text.*)
 .text.Green    0x0000000000000082       0xe4 ./Green.o
                0x0000000000000082                Green
 .text.Initializing
                0x0000000000000166       0x22 ./Initializing.o
                0x0000000000000166                Initializing
 .text.Orange   0x0000000000000188       0xc4 ./Orange.o
                0x0000000000000188                Orange
 .text.Red      0x000000000000024c       0xe4 ./Red.o
                0x000000000000024c                Red
 .text.delay_ms
                0x0000000000000330       0x8a ./delay_ms.o
                0x0000000000000330                delay_ms
 .text.main     0x00000000000003ba       0x3e ./main.o
                0x00000000000003ba                main
 .text.libgcc.mul
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000003f8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003f8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x00000000000003f8                exit
                0x00000000000003f8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003f8        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003fc                _etext = .

.data           0x0000000000800060      0x1f6 load address 0x00000000000003fc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./Green.o
 .data          0x0000000000800060        0x0 ./Initializing.o
 .data          0x0000000000800060        0x0 ./Orange.o
 .data          0x0000000000800060        0x0 ./Red.o
 .data          0x0000000000800060        0x0 ./delay_ms.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 *(.data*)
 .data.R        0x0000000000800060       0x40 ./main.o
                0x0000000000800060                R
 .data.U        0x00000000008000a0       0x60 ./main.o
                0x00000000008000a0                U
 .data.S1       0x0000000000800100       0x50 ./main.o
                0x0000000000800100                S1
 .data.S2       0x0000000000800150       0x50 ./main.o
                0x0000000000800150                S2
 .data.E        0x00000000008001a0       0x70 ./main.o
                0x00000000008001a0                E
 *(.rodata)
 .rodata        0x0000000000800210        0xa ./Green.o
 .rodata        0x000000000080021a        0xa ./Orange.o
 .rodata        0x0000000000800224        0xa ./Red.o
 .rodata        0x000000000080022e       0x28 ./main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800256                . = ALIGN (0x2)
                0x0000000000800256                _edata = .
                0x0000000000800256                PROVIDE (__data_end, .)

.bss            0x0000000000800256        0x0
                0x0000000000800256                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800256        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800256        0x0 ./Green.o
 .bss           0x0000000000800256        0x0 ./Initializing.o
 .bss           0x0000000000800256        0x0 ./Orange.o
 .bss           0x0000000000800256        0x0 ./Red.o
 .bss           0x0000000000800256        0x0 ./delay_ms.o
 .bss           0x0000000000800256        0x0 ./main.o
 .bss           0x0000000000800256        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800256        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800256                PROVIDE (__bss_end, .)
                0x00000000000003fc                __data_load_start = LOADADDR (.data)
                0x00000000000005f2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800256        0x0
                0x0000000000800256                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800256                PROVIDE (__noinit_end, .)
                0x0000000000800256                _end = .
                0x0000000000800256                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1b3c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x3f0 ./Green.o
                                        0x3fc (size before relaxing)
 .stab          0x0000000000000abc      0x2b8 ./Initializing.o
                                        0x330 (size before relaxing)
 .stab          0x0000000000000d74      0x36c ./Orange.o
                                        0x3fc (size before relaxing)
 .stab          0x00000000000010e0      0x36c ./Red.o
                                        0x3fc (size before relaxing)
 .stab          0x000000000000144c      0x318 ./delay_ms.o
                                        0x39c (size before relaxing)
 .stab          0x0000000000001764      0x3d8 ./main.o
                                        0x3e4 (size before relaxing)

.stabstr        0x0000000000000000      0xb7f
 *(.stabstr)
 .stabstr       0x0000000000000000      0xb7f /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Green.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./Initializing.o
 .comment       0x0000000000000000       0x12 ./Orange.o
 .comment       0x0000000000000000       0x12 ./Red.o
 .comment       0x0000000000000000       0x12 ./delay_ms.o
 .comment       0x0000000000000000       0x12 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LED_Matrix.elf elf32-avr)
LOAD linker stubs
