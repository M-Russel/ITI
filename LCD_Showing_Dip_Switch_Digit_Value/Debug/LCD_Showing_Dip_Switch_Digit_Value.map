Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./LCD_Prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Prog.o
LOAD ./DIO_voidInitialize.o
LOAD ./LCD_Prog.o
LOAD ./delay_ms.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x814
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 ./DIO_Prog.o
 .text          0x0000000000000092        0x0 ./DIO_voidInitialize.o
 .text          0x0000000000000092        0x0 ./LCD_Prog.o
 .text          0x0000000000000092        0x0 ./delay_ms.o
 .text          0x0000000000000092        0x0 ./main.o
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_u8SetPortDirection
                0x0000000000000092       0x50 ./DIO_Prog.o
                0x0000000000000092                DIO_u8SetPortDirection
 .text.DIO_u8SetPinDirection
                0x00000000000000e2       0x8e ./DIO_Prog.o
                0x00000000000000e2                DIO_u8SetPinDirection
 .text.DIO_u8SetPortValue
                0x0000000000000170       0x2a ./DIO_Prog.o
                0x0000000000000170                DIO_u8SetPortValue
 .text.DIO_u8SetPinValue
                0x000000000000019a       0xba ./DIO_Prog.o
                0x000000000000019a                DIO_u8SetPinValue
 .text.DIO_u8GetPortValue
                0x0000000000000254       0x16 ./DIO_Prog.o
                0x0000000000000254                DIO_u8GetPortValue
 .text.DIO_u8GetPinValue
                0x000000000000026a       0x3c ./DIO_Prog.o
                0x000000000000026a                DIO_u8GetPinValue
 .text.DIO_voidInitialize
                0x00000000000002a6       0x50 ./DIO_voidInitialize.o
                0x00000000000002a6                DIO_voidInitialize
 .text.LCD_u8WriteCommand
                0x00000000000002f6       0xc4 ./LCD_Prog.o
                0x00000000000002f6                LCD_u8WriteCommand
 .text.LCD_u8WriteData
                0x00000000000003ba       0xc4 ./LCD_Prog.o
                0x00000000000003ba                LCD_u8WriteData
 .text.LCD_u8Init
                0x000000000000047e       0x5a ./LCD_Prog.o
                0x000000000000047e                LCD_u8Init
 .text.LCD_u8ClearScreen
                0x00000000000004d8       0x16 ./LCD_Prog.o
                0x00000000000004d8                LCD_u8ClearScreen
 .text.LCD_u8WriteString
                0x00000000000004ee       0x54 ./LCD_Prog.o
                0x00000000000004ee                LCD_u8WriteString
 .text.LCD_u8CursorPosition
                0x0000000000000542       0x4e ./LCD_Prog.o
                0x0000000000000542                LCD_u8CursorPosition
 .text.LCD_u8WriteCgRam
                0x0000000000000590       0x16 ./LCD_Prog.o
                0x0000000000000590                LCD_u8WriteCgRam
 .text.LCD_u8WriteDdRam
                0x00000000000005a6       0x16 ./LCD_Prog.o
                0x00000000000005a6                LCD_u8WriteDdRam
 .text.delay_ms
                0x00000000000005bc       0x8a ./delay_ms.o
                0x00000000000005bc                delay_ms
 .text.main     0x0000000000000646      0x1ca ./main.o
                0x0000000000000646                main
 .text.libgcc.mul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000810                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000810        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x0000000000000810                exit
                0x0000000000000810                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000810        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000814                _etext = .

.data           0x0000000000800060       0x58 load address 0x0000000000000814
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./DIO_Prog.o
 .data          0x0000000000800060        0x0 ./DIO_voidInitialize.o
 .data          0x0000000000800060        0x0 ./LCD_Prog.o
 .data          0x0000000000800060        0x0 ./delay_ms.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060       0x58 ./main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000b8                . = ALIGN (0x2)
                0x00000000008000b8                _edata = .
                0x00000000008000b8                PROVIDE (__data_end, .)

.bss            0x00000000008000b8        0x1
                0x00000000008000b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x00000000008000b8        0x0 ./DIO_Prog.o
 .bss           0x00000000008000b8        0x0 ./DIO_voidInitialize.o
 .bss           0x00000000008000b8        0x0 ./LCD_Prog.o
 .bss           0x00000000008000b8        0x0 ./delay_ms.o
 .bss           0x00000000008000b8        0x0 ./main.o
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008000b8        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Local_u8Status
                0x00000000008000b8        0x1 ./LCD_Prog.o
                0x00000000008000b8                Local_u8Status
 *(COMMON)
                0x00000000008000b9                PROVIDE (__bss_end, .)
                0x0000000000000814                __data_load_start = LOADADDR (.data)
                0x000000000000086c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000b9        0x0
                0x00000000008000b9                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000b9                PROVIDE (__noinit_end, .)
                0x00000000008000b9                _end = .
                0x00000000008000b9                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x20dc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x618 ./DIO_Prog.o
                                        0x624 (size before relaxing)
 .stab          0x0000000000000ce4      0x2f4 ./DIO_voidInitialize.o
                                        0x3d8 (size before relaxing)
 .stab          0x0000000000000fd8      0x660 ./LCD_Prog.o
                                        0x744 (size before relaxing)
 .stab          0x0000000000001638      0x324 ./delay_ms.o
                                        0x3fc (size before relaxing)
 .stab          0x000000000000195c      0x780 ./main.o
                                        0x864 (size before relaxing)

.stabstr        0x0000000000000000     0x1338
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1338 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DIO_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./DIO_voidInitialize.o
 .comment       0x0000000000000000       0x12 ./LCD_Prog.o
 .comment       0x0000000000000000       0x12 ./delay_ms.o
 .comment       0x0000000000000000       0x12 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(LCD_Showing_Dip_Switch_Digit_Value.elf elf32-avr)
LOAD linker stubs
