Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                              ./DIO_Prog.o (__tablejump2__)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              ./KEYPAD_Prog.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              ./SWITCH_Prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Prog.o
LOAD ./KEYPAD_Prog.o
LOAD ./KEYPAD_Prog2.o
LOAD ./LCD_Prog.o
LOAD ./SWITCH_Prog.o
LOAD ./Stepper.o
LOAD ./delay_ms.o
LOAD ./main.o
LOAD ./switch.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xca8
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.DIO_u8SetPinDirection
                0x0000000000000054       0x40 ./DIO_Prog.o
 .progmem.gcc_sw_table.DIO_u8SetPinValue
                0x0000000000000094       0x40 ./DIO_Prog.o
 .progmem.gcc_sw_table.DIO_u8GetPinValue
                0x00000000000000d4       0x40 ./DIO_Prog.o
 *(.progmem*)
                0x0000000000000114                . = ALIGN (0x2)
                0x0000000000000114                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000114        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000114                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000114                __ctors_start = .
 *(.ctors)
                0x0000000000000114                __ctors_end = .
                0x0000000000000114                __dtors_start = .
 *(.dtors)
                0x0000000000000114                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000114        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x0000000000000114                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000114        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000120       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000120                __do_copy_data
 .init4         0x0000000000000136       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000136                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000146        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000014e        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
                0x000000000000014e                __vector_1
                0x000000000000014e                __vector_12
                0x000000000000014e                __bad_interrupt
                0x000000000000014e                __vector_6
                0x000000000000014e                __vector_3
                0x000000000000014e                __vector_11
                0x000000000000014e                __vector_13
                0x000000000000014e                __vector_17
                0x000000000000014e                __vector_19
                0x000000000000014e                __vector_7
                0x000000000000014e                __vector_5
                0x000000000000014e                __vector_4
                0x000000000000014e                __vector_9
                0x000000000000014e                __vector_2
                0x000000000000014e                __vector_15
                0x000000000000014e                __vector_8
                0x000000000000014e                __vector_14
                0x000000000000014e                __vector_10
                0x000000000000014e                __vector_16
                0x000000000000014e                __vector_18
                0x000000000000014e                __vector_20
 .text          0x0000000000000152        0x0 ./DIO_Prog.o
 .text          0x0000000000000152        0x0 ./KEYPAD_Prog.o
 .text          0x0000000000000152        0x0 ./KEYPAD_Prog2.o
 .text          0x0000000000000152        0x0 ./LCD_Prog.o
 .text          0x0000000000000152        0x0 ./SWITCH_Prog.o
 .text          0x0000000000000152        0x0 ./Stepper.o
 .text          0x0000000000000152        0x0 ./delay_ms.o
 .text          0x0000000000000152        0x0 ./main.o
 .text          0x0000000000000152        0x0 ./switch.o
 .text          0x0000000000000152        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000152        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000000152        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000152        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000152                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_voidInitialize
                0x0000000000000152       0x50 ./DIO_Prog.o
                0x0000000000000152                DIO_voidInitialize
 .text.DIO_u8SetPortDirection
                0x00000000000001a2       0x50 ./DIO_Prog.o
                0x00000000000001a2                DIO_u8SetPortDirection
 .text.DIO_u8SetPinDirection
                0x00000000000001f2      0x22e ./DIO_Prog.o
                0x00000000000001f2                DIO_u8SetPinDirection
 .text.DIO_u8SetPortValue
                0x0000000000000420       0x2a ./DIO_Prog.o
                0x0000000000000420                DIO_u8SetPortValue
 .text.DIO_u8SetPinValue
                0x000000000000044a      0x22e ./DIO_Prog.o
                0x000000000000044a                DIO_u8SetPinValue
 .text.DIO_u8GetPortValue
                0x0000000000000678       0x20 ./DIO_Prog.o
                0x0000000000000678                DIO_u8GetPortValue
 .text.DIO_u8GetPinValue
                0x0000000000000698      0x108 ./DIO_Prog.o
                0x0000000000000698                DIO_u8GetPinValue
 .text.KEYPAD_u8Init
                0x00000000000007a0       0x90 ./KEYPAD_Prog.o
                0x00000000000007a0                KEYPAD_u8Init
 .text.KEYPAD_u8GetKeyValue
                0x0000000000000830      0x114 ./KEYPAD_Prog.o
                0x0000000000000830                KEYPAD_u8GetKeyValue
 .text.LCD_voidWriteCommand
                0x0000000000000944       0x52 ./LCD_Prog.o
                0x0000000000000944                LCD_voidWriteCommand
 .text.LCD_voidWriteData
                0x0000000000000996       0x52 ./LCD_Prog.o
                0x0000000000000996                LCD_voidWriteData
 .text.LCD_voidInit
                0x00000000000009e8       0x44 ./LCD_Prog.o
                0x00000000000009e8                LCD_voidInit
 .text.SWITCH_u8GetStatus
                0x0000000000000a2c       0x9a ./SWITCH_Prog.o
                0x0000000000000a2c                SWITCH_u8GetStatus
 .text.main2    0x0000000000000ac6       0xec ./Stepper.o
                0x0000000000000ac6                main2
 .text.delay_ms
                0x0000000000000bb2       0x8a ./delay_ms.o
                0x0000000000000bb2                delay_ms
 .text.main     0x0000000000000c3c       0x5c ./main.o
                0x0000000000000c3c                main
 .text.libgcc.mul
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x0000000000000c98        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc   0x0000000000000c98        0xc /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
                0x0000000000000c98                __tablejump2__
                0x0000000000000c9c                __tablejump__
 .text.libgcc.prologue
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.fixed
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000ca4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000ca4        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x0000000000000ca4                exit
                0x0000000000000ca4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000ca4        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ca8                _etext = .

.data           0x0000000000800060        0x8 load address 0x0000000000000ca8
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060        0x0 ./DIO_Prog.o
 .data          0x0000000000800060        0x0 ./KEYPAD_Prog.o
 .data          0x0000000000800060        0x0 ./KEYPAD_Prog2.o
 .data          0x0000000000800060        0x0 ./LCD_Prog.o
 .data          0x0000000000800060        0x0 ./SWITCH_Prog.o
 .data          0x0000000000800060        0x0 ./Stepper.o
 .data          0x0000000000800060        0x0 ./delay_ms.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 ./switch.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800060        0x8 ./KEYPAD_Prog.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800068                . = ALIGN (0x2)
                0x0000000000800068                _edata = .
                0x0000000000800068                PROVIDE (__data_end, .)

.bss            0x0000000000800068        0x2
                0x0000000000800068                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800068        0x0 ./DIO_Prog.o
 .bss           0x0000000000800068        0x0 ./KEYPAD_Prog.o
 .bss           0x0000000000800068        0x0 ./KEYPAD_Prog2.o
 .bss           0x0000000000800068        0x0 ./LCD_Prog.o
 .bss           0x0000000000800068        0x0 ./SWITCH_Prog.o
 .bss           0x0000000000800068        0x0 ./Stepper.o
 .bss           0x0000000000800068        0x0 ./delay_ms.o
 .bss           0x0000000000800068        0x0 ./main.o
 .bss           0x0000000000800068        0x0 ./switch.o
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_tablejump.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.SWITCH_u8PushedCounter.1504
                0x0000000000800068        0x1 ./SWITCH_Prog.o
 .bss.SWITCH_u8ReleasedCounter.1505
                0x0000000000800069        0x1 ./SWITCH_Prog.o
 *(COMMON)
                0x000000000080006a                PROVIDE (__bss_end, .)
                0x0000000000000ca8                __data_load_start = LOADADDR (.data)
                0x0000000000000cb0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006a        0x0
                0x000000000080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080006a                PROVIDE (__noinit_end, .)
                0x000000000080006a                _end = .
                0x000000000080006a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2d0c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o
 .stab          0x00000000000006cc      0x8e8 ./DIO_Prog.o
                                        0x8f4 (size before relaxing)
 .stab          0x0000000000000fb4      0x4b0 ./KEYPAD_Prog.o
                                        0x588 (size before relaxing)
 .stab          0x0000000000001464      0x258 ./KEYPAD_Prog2.o
                                        0x264 (size before relaxing)
 .stab          0x00000000000016bc      0x3d8 ./LCD_Prog.o
                                        0x4b0 (size before relaxing)
 .stab          0x0000000000001a94      0x39c ./SWITCH_Prog.o
                                        0x474 (size before relaxing)
 .stab          0x0000000000001e30      0x5f4 ./Stepper.o
                                        0x6cc (size before relaxing)
 .stab          0x0000000000002424      0x318 ./delay_ms.o
                                        0x3fc (size before relaxing)
 .stab          0x000000000000273c      0x378 ./main.o
                                        0x63c (size before relaxing)
 .stab          0x0000000000002ab4      0x258 ./switch.o
                                        0x264 (size before relaxing)

.stabstr        0x0000000000000000     0x12cf
 *(.stabstr)
 .stabstr       0x0000000000000000     0x12cf /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DIO_Prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./KEYPAD_Prog.o
 .comment       0x0000000000000000       0x12 ./KEYPAD_Prog2.o
 .comment       0x0000000000000000       0x12 ./LCD_Prog.o
 .comment       0x0000000000000000       0x12 ./SWITCH_Prog.o
 .comment       0x0000000000000000       0x12 ./Stepper.o
 .comment       0x0000000000000000       0x12 ./delay_ms.o
 .comment       0x0000000000000000       0x12 ./main.o
 .comment       0x0000000000000000       0x12 ./switch.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Hardware.elf elf32-avr)
LOAD linker stubs
