/*
 * Test.c
 *
 *  Created on: Feb 27, 2017
 *      Author: root
 */

#include <stdio.h>
#include "std_types.h"
#define N 10

void ARRAY_voidSort(u8 Copy_u8ElementsNumber,pu8 Copy_pu8Array)
{
u8 Copy_Counter=0;
u8 Copy_Counter2=0;
u8 Copy_min=0;
u8 Copy_tmp=0;

for (Copy_Counter=1;Copy_Counter<N;Copy_Counter++)
{
Copy_min=Copy_Counter;

for (Copy_Counter2=Copy_Counter+1;Copy_Counter2<=N;Copy_Counter2++)
{
 if (Copy_pu8Array[Copy_Counter2] < Copy_pu8Array[Copy_min])
 {
	 Copy_min=Copy_Counter2;
 }
	Copy_tmp=Copy_pu8Array[Copy_min];
	Copy_pu8Array[Copy_min]=Copy_pu8Array[Copy_Counter];
	Copy_pu8Array[Copy_Counter]=Copy_tmp;
}


}


}

typedef struct {
	u8 x;
	u16 y;
	u32 z;

}test;
void main (void)
{

u8 arr[N]={7,4,2,5,3,6,8,9,10,1};
u8 Counter=0;

for (Counter =0 ; Counter<N;Counter++)
{
printf("%d \t",arr[Counter]);
}

printf("\n");
ARRAY_voidSort(N,arr);

for (Counter =0 ; Counter<N;Counter++)
{
printf("%d \t",arr[Counter]);
}

}
